!--------------------------------------------------------------------------
! This is free software, you can use/redistribute/modify it under the terms of
! the EC-RPN License v2 or any later version found (if not provided) at:
! - http://collaboration.cmc.ec.gc.ca/science/rpn.comm/license.html
! - EC-RPN License, 2121 TransCanada, suite 500, Dorval (Qc), CANADA, H9P 1J3
! - service.rpn@ec.gc.ca
! It is distributed WITHOUT ANY WARRANTY of FITNESS FOR ANY PARTICULAR PURPOSE.
!--------------------------------------------------------------------------
!/**
#include "jim_grid_mod.hf"

program jim_grid_test
   use jim_grid_mod, only: m_nodes_8
   use vect_mod
   implicit none
!**/
   integer, parameter :: NGRIDS = JIM_NGRIDS
   integer :: ndiv,nijh,nij,halo,istat,i,j,ig,iv,ij0,ijn,i2,j2,ig2,minxy,maxxy,m_nij
   real, dimension(:,:,:), allocatable :: lat,lon
   real, dimension(:,:,:,:), allocatable :: latc,lonc
   type(vect_3d_8), allocatable :: v3d8(:,:,:)
   integer, external :: jim_grid_dims,jim_grid_lalo,jim_xch_halo_nompi_2d_r4,jim_grid_corners_lalo,jim_xch_halo_nompi_vect3d_8
   !---------------------------------------------------------------------
   ndiv  = 2

   nijh  = jim_grid_dims(ndiv,1)
   nij   = jim_grid_dims(ndiv,0)
   halo  = (nijh - nij)/2

   minxy = 1-halo
   maxxy = nij+halo
   m_nij = nij

   allocate(lat(minxy:maxxy,minxy:maxxy,0:NGRIDS-1),STAT=istat)
   allocate(lon(minxy:maxxy,minxy:maxxy,0:NGRIDS-1),STAT=istat)


   print *,''
   print *,'---- halo xch ----'
   print *,''
   print *,'halo,nij=',halo,nij

   lat(JIM_NPOLE_I,JIM_NPOLE_J,JIM_NHEMI) =  999.
   lat(JIM_SPOLE_I,JIM_SPOLE_J,JIM_SHEMI) = -999.
   do ig=0,NGRIDS-1
      do j=1,nij
         do i=1,nij
            lat(i,j,ig) = float(ig*100+j*10+i)
         enddo
      enddo
   enddo

   ij0 = 1
   ijn = nij

   print *,''
   print *,'Before halo xch'
   print *,'grid 1 - N Hemi'
   ig = JIM_NHEMI
   do j = ijn+1,ij0,-1
      if (j==ijn+1) then
         print '(I3,A,F6.1)',j,':',lat(ij0,j,ig)
      else
         print '(I3,A,4F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn)
      endif
   enddo
   print *,'grid 2 - S Hemi'
   ig = JIM_SHEMI
   do j = ijn,ij0,-1
      if (j==ij0) then
         print '(I3,A,5F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn+1)
      else
         print '(I3,A,4F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn)
      endif
   enddo


   istat = jim_xch_halo_nompi_2d_r4(nijh,lat)

   print *,''
   print *,'After Halo sch'
   print *,'grid 1 - N Hemi'
   ig = JIM_NHEMI
   do j = ijn+1,ij0,-1
      if (j==ijn+1) then
         print '(I3,A,F6.1)',j,':',lat(ij0,j,ig)
      else
         print '(I3,A,4F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn)
      endif
   enddo
   print *,'grid 2 - S Hemi'
   ig = JIM_SHEMI
   do j = ijn,ij0,-1
      if (j==ij0) then
         print '(I3,A,5F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn+1)
      else
         print '(I3,A,4F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn)
      endif
   enddo


   ij0 = 0
   ijn = nij+1

   print *,''
   do ig=0,3
      if (JIM_IS_NGRID(ig)) then
         print *,'grid ',ig,' - N Hemi'
      else
         print *,'grid ',ig,' - S Hemi'
      endif
      do j = ijn+1,ij0,-1
         print '(I3,A,7F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn+1)
      enddo
   enddo



   print *,''
   print *,'---- halo xch vect ----'
   print *,''
   print *,'halo,nij=',halo,nij

   allocate(v3d8(minxy:maxxy,minxy:maxxy,0:NGRIDS-1),STAT=istat)

   v3d8(JIM_NPOLE_I,JIM_NPOLE_J,JIM_NHEMI) =  999.D0
   v3d8(JIM_SPOLE_I,JIM_SPOLE_J,JIM_SHEMI) = -999.D0
   do ig=0,NGRIDS-1
      do j=1,nij
         do i=1,nij
            v3d8(i,j,ig) = dble(ig*100+j*10+i)
         enddo
      enddo
   enddo

   ij0 = 1
   ijn = nij

   print *,''
   print *,'Before halo xch'
   print *,'grid 1 - N Hemi'
   ig = JIM_NHEMI
   do j = ijn+1,ij0,-1
      if (j==ijn+1) then
         print '(I3,A,3F6.1)',j,':',v3d8(ij0,j,ig)
      else
         print '(I3,A,4F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn)
      endif
   enddo
   print *,'grid 2 - S Hemi'
   ig = JIM_SHEMI
   do j = ijn,ij0,-1
      if (j==ij0) then
         print '(I3,A,5F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn+1)
      else
         print '(I3,A,4F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn)
      endif
   enddo

   istat = jim_xch_halo_nompi_vect3d_8(nijh,v3d8)

   print *,''
   print *,'After Halo sch'
   print *,'grid 1 - N Hemi'
   ig = JIM_NHEMI
   do j = ijn+1,ij0,-1
      if (j==ijn+1) then
         print '(I3,A,3F6.1)',j,':',v3d8(ij0,j,ig)
      else
         print '(I3,A,4F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn)
      endif
   enddo
   print *,'grid 2 - S Hemi'
   ig = JIM_SHEMI
   do j = ijn,ij0,-1
      if (j==ij0) then
         print '(I3,A,5F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn+1)
      else
         print '(I3,A,4F6.1)',j,':',(v3d8(i,j,ig)%v(1),i=ij0,ijn)
      endif
   enddo


   ij0 = 0
   ijn = nij+1

   print *,''
   do ig=0,3
      do iv=1,3
         if (JIM_IS_NGRID(ig)) then
            print *,'grid ',ig,' - N Hemi - axe=',iv
         else
            print *,'grid ',ig,' - S Hemi - axe=',iv
         endif
         do j = ijn+1,ij0,-1
            print '(I3,A,7F6.1)',j,':',(v3d8(i,j,ig)%v(iv),i=ij0,ijn+1)
         enddo
      enddo
   enddo

   istat = jim_grid_lalo(lat,lon,nij,halo,ndiv)
   print *,''
   print *,'---- grid center la lo ----'

   ij0 = 1
   ijn = nij

   print *,''
   print *,JIM_NHEMI,lat(JIM_NPOLE_I,JIM_NPOLE_J,JIM_NHEMI),lon(JIM_NPOLE_I,JIM_NPOLE_J,JIM_NHEMI),'NP'
   print *,JIM_SHEMI,lat(JIM_SPOLE_I,JIM_SPOLE_J,JIM_SHEMI),lon(JIM_SPOLE_I,JIM_SPOLE_J,JIM_SHEMI),'SP'
   do ig=0,NGRIDS-1
      print *,ig,lat(ij0,ij0,ig),lon(ij0,ij0,ig)
   enddo

   ij0 = 0
   ijn = nij+1

   print *,''
   do ig=0,3
      if (JIM_IS_NGRID(ig)) then
         print *,'grid ',ig,' - N Hemi'
      else
         print *,'grid ',ig,' - S Hemi'
      endif
      do j = ijn+1,ij0,-1
         print '(I3,A,6F6.1)',j,':',(lat(i,j,ig),i=ij0,ijn)
      enddo
   enddo

   print *,''
   print *,'---- grid corners la lo ----'
   allocate(latc(minxy:maxxy,minxy:maxxy,6,0:NGRIDS-1),STAT=istat)
   allocate(lonc(minxy:maxxy,minxy:maxxy,6,0:NGRIDS-1),STAT=istat)

   istat = jim_grid_corners_lalo(lat,lon,latc,lonc,nij,halo,ndiv,0)

   ij0 = 0
   ijn = nij+1

   print *,''
   do ig=0,3
      if (JIM_IS_NGRID(ig)) then
         print *,'grid ',ig,' Corner 1 - N Hemi'
      else
         print *,'grid ',ig,' Corner 1 - S Hemi'
      endif
      do j = ijn+1,ij0,-1
         print '(I3,A,6F6.1)',j,':',(latc(i,j,1,ig),i=ij0,ijn)
      enddo
   enddo

   ij0 = 0
   ijn = nij+1

   i=(ij0+ijn)/2
   j=i
   ig=3
   print *,''
   print *,'node corners for i,j,g=',i-ij0,j-ij0,ig
   print '(6X,2F6.1)',              latc(i,j,3,ig),latc(i,j,4,ig)
   print '(3F6.1)',   latc(i,j,2,ig),  lat(i,j,ig),latc(i,j,5,ig)
   print '(2F6.1)',   latc(i,j,1,ig),latc(i,j,6,ig)
    
   i=JIM_PENTA_I
   j=JIM_PENTA_J
   ig=JIM_NHEMI
   print *,''
   print *,'node corners for N PENTA'
   print '(6X,2F6.1)',              latc(i,j,3,ig),latc(i,j,4,ig)
   print '(3F6.1)',   latc(i,j,2,ig),   lat(i,j,ig),latc(i,j,5,ig)
   print '(2F6.1)',   latc(i,j,1,ig),latc(i,j,6,ig)

   i=JIM_PENTA_I
   j=JIM_PENTA_J
   ig=JIM_SHEMI
   print *,''
   print *,'node corners for S PENTA'
   print '(6X,2F6.1)',              latc(i,j,3,ig),latc(i,j,4,ig)
   print '(3F6.1)',   latc(i,j,2,ig),   lat(i,j,ig),latc(i,j,5,ig)
   print '(2F6.1)',   latc(i,j,1,ig),latc(i,j,6,ig)

   i=JIM_NPOLE_I
   j=JIM_NPOLE_J
   ig=JIM_NHEMI
   print *,''
   print *,'node corners for NP'
   print '(6X,2F6.1)',              latc(i,j,3,ig),latc(i,j,4,ig)
   print '(3F6.1)',   latc(i,j,2,ig),   lat(i,j,ig),latc(i,j,5,ig)
   print '(2F6.1)',   latc(i,j,1,ig),latc(i,j,6,ig)

   i=JIM_SPOLE_I
   j=JIM_SPOLE_J
   ig=JIM_SHEMI
   print *,''
   print *,'node corners for SP'
   print '(6X,2F6.1)',              latc(i,j,3,ig),latc(i,j,4,ig)
   print '(3F6.1)',   latc(i,j,2,ig),  lat(i,j,ig),latc(i,j,5,ig)
   print '(2F6.1)',   latc(i,j,1,ig),latc(i,j,6,ig)


   print *,''
   print *,'m_nodes'
   do ig=0,3
      do iv=1,3
         if (JIM_IS_NGRID(ig)) then
            print *,'grid ',ig,' - N Hemi - axe=',iv
         else
            print *,'grid ',ig,' - S Hemi - axe=',iv
         endif
         do j = ijn+1,ij0,-1
            print '(I3,A,7F6.2)',j,':',(m_nodes_8(i,j,ig)%v(iv),i=ij0,ijn+1)
         enddo
      enddo
   enddo

   !---------------------------------------------------------------------
end program jim_grid_test
